{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/logout.js\";\n// eslint-disable-next-line\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Logout extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.logout = posts => {\n      localStorage.setItem('_id', null);\n      localStorage.setItem('username', null);\n      localStorage.setItem('email', null);\n      localStorage.setItem('firstname', null);\n      localStorage.setItem('lastname', null);\n      localStorage.setItem('hash', null);\n      localStorage.setItem('salt', null);\n      localStorage.setItem('role', null);\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are now being logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this);\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\nexport default Logout;\n\n/**\n *  const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */","map":{"version":3,"names":["React","axios","Logout","Component","logout","posts","localStorage","setItem","render"],"sources":["/home/daniel/CS499/src/pages/logout.js"],"sourcesContent":["// eslint-disable-next-line\nimport React from 'react';\nimport axios from 'axios';\n\nclass Logout extends React.Component{\n\n  logout = (posts) =>{\n    localStorage.setItem('_id', null);\n    localStorage.setItem('username', null);\n    localStorage.setItem('email', null);\n    localStorage.setItem('firstname', null);\n    localStorage.setItem('lastname', null);\n    localStorage.setItem('hash', null);\n    localStorage.setItem('salt', null);\n    localStorage.setItem('role', null);\n  }\n\n  render(){\n    return(\n      <div className='text-center text-white'>\n        <h1>You are now being logged out</h1>\n      </div>\n    );\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Logout;\n\n/**\n *  const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,SAASF,KAAK,CAACG,SAAS;EAAA;IAAA;IAAA,KAElCC,MAAM,GAAIC,KAAK,IAAI;MACjBC,YAAY,CAACC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;MACjCD,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;MACtCD,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC;MACnCD,YAAY,CAACC,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC;MACvCD,YAAY,CAACC,OAAO,CAAC,UAAU,EAAE,IAAI,CAAC;MACtCD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;MAClCD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;MAClCD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;IACpC,CAAC;EAAA;EAEDC,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,wBAAwB;MAAA,uBACrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqC;MAAA;MAAA;MAAA;IAAA,QACjC;EAEV;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeN,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}