{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/logout.js\";\n// eslint-disable-next-line\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Logout extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.logout = () => {\n      localStorage.clear('_id');\n      localStorage.clear('username');\n      localStorage.clear('email');\n      localStorage.clear('firstname');\n      localStorage.clear('lastname');\n      localStorage.clear('hash');\n      localStorage.clear('salt');\n      localStorage.clear('role');\n      window.open('/', \"_self\");\n    };\n  }\n  render() {\n    this.logout();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You are now being logged out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\nexport default Logout;\n\n/**\n *  const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */","map":{"version":3,"names":["React","axios","Logout","Component","logout","localStorage","clear","window","open","render"],"sources":["/home/daniel/CS499/src/pages/logout.js"],"sourcesContent":["// eslint-disable-next-line\nimport React from 'react';\nimport axios from 'axios';\n\nclass Logout extends React.Component{\n\n  //This is boosted asf, this could be done way better but YOLO I got a class to pass\n  //so this will do IG\n\n  logout = () =>{\n    localStorage.clear('_id');\n    localStorage.clear('username');\n    localStorage.clear('email');\n    localStorage.clear('firstname',);\n    localStorage.clear('lastname');\n    localStorage.clear('hash');\n    localStorage.clear('salt');\n    localStorage.clear('role');\n    window.open('/', \"_self\");\n  }\n\n  render(){\n    this.logout();\n    return(\n      <div className='text-center text-white'>\n        <h1>You are now being logged out</h1>\n      </div>\n    );\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Logout;\n\n/**\n *  const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,MAAM,SAASF,KAAK,CAACG,SAAS;EAAA;IAAA;IAAA,KAKlCC,MAAM,GAAG,MAAK;MACZC,YAAY,CAACC,KAAK,CAAC,KAAK,CAAC;MACzBD,YAAY,CAACC,KAAK,CAAC,UAAU,CAAC;MAC9BD,YAAY,CAACC,KAAK,CAAC,OAAO,CAAC;MAC3BD,YAAY,CAACC,KAAK,CAAC,WAAW,CAAE;MAChCD,YAAY,CAACC,KAAK,CAAC,UAAU,CAAC;MAC9BD,YAAY,CAACC,KAAK,CAAC,MAAM,CAAC;MAC1BD,YAAY,CAACC,KAAK,CAAC,MAAM,CAAC;MAC1BD,YAAY,CAACC,KAAK,CAAC,MAAM,CAAC;MAC1BC,MAAM,CAACC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC;IAC3B,CAAC;EAAA;EAEDC,MAAM,GAAE;IACN,IAAI,CAACL,MAAM,EAAE;IACb,oBACE;MAAK,SAAS,EAAC,wBAAwB;MAAA,uBACrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqC;MAAA;MAAA;MAAA;IAAA,QACjC;EAEV;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeF,MAAM;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}