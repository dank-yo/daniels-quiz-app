{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/login.js\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Register extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      firstname: '',\n      lastname: '',\n      passwrd: '',\n      posts: []\n    };\n    this.errors = {\n      uname: \"Invalid username\",\n      pass: \"Invalid password\"\n    };\n  }\n  render() {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"uname\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 15\n              }, this), renderErrorMessage(\"uname\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                //Daniel\n                //changed from text -> password\n                type: \"password\",\n                className: \"form-control\",\n                name: \"pass\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 15\n              }, this), renderErrorMessage(\"pass\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            className: \"btn btn-secondary\",\n            children: \"Dont have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this);\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */","map":{"version":3,"names":["React","useState","Register","Component","state","username","firstname","lastname","passwrd","posts","errors","uname","pass","render","handleSubmit","renderErrorMessage","Login"],"sources":["/home/daniel/CS499/src/pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\n\nclass Register extends React.Component{\n\n  state = {\n    username: '',\n    firstname: '',\n    lastname: '', \n    passwrd: '',\n    posts: []\n  };\n  //[errorMessages, setErrorMessages] = useState({});\n  //[isSubmitted, setIsSubmitted] = useState(false);\n  errors = {\n    uname: \"Invalid username\",\n    pass: \"Invalid password\"\n  };\n\n  render(){\n    <div className='text-center text-white'>\n      <h1>Login Test</h1>\n      <div className=\"container mt-3\">\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <div className=\"mb-3 mt-3\">\n            <label>Username:\n              <input \n                type=\"text\" \n                className=\"form-control\"\n                name='uname'\n                required/>\n                {renderErrorMessage(\"uname\")}\n            </label>\n          </div>\n          <div className=\"mb-3\">\n            <label>Password:\n              <input \n              //Daniel\n              //changed from text -> password\n                type=\"password\" \n                className=\"form-control\"\n                name=\"pass\"\n                required/>\n                {renderErrorMessage(\"pass\")}\n            </label>\n          </div>\n          <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\n          <a href='/register' className='btn btn-secondary' >Dont have an account?</a>\n        </form>\n      </div>\n    </div>\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,QAAQ,SAASF,KAAK,CAACG,SAAS;EAAA;IAAA;IAAA,KAEpCC,KAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT,CAAC;IAAA,KAGDC,MAAM,GAAG;MACPC,KAAK,EAAE,kBAAkB;MACzBC,IAAI,EAAE;IACR,CAAC;EAAA;EAEDC,MAAM,GAAE;IACN;MAAK,SAAS,EAAC,wBAAwB;MAAA,wBACrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QAAK,SAAS,EAAC,gBAAgB;QAAA,uBAC7B;UAAM,QAAQ,EAAEC,YAAa;UAAC,YAAY,EAAC,KAAK;UAAA,wBAC9C;YAAK,SAAS,EAAC,WAAW;YAAA,uBACxB;cAAA,qCACE;gBACE,IAAI,EAAC,MAAM;gBACX,SAAS,EAAC,cAAc;gBACxB,IAAI,EAAC,OAAO;gBACZ,QAAQ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAE,EACTC,kBAAkB,CAAC,OAAO,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;UACxB;YAAA;YAAA;YAAA;UAAA,QACJ,eACN;YAAK,SAAS,EAAC,MAAM;YAAA,uBACnB;cAAA,qCACE;gBACA;gBACA;gBACE,IAAI,EAAC,UAAU;gBACf,SAAS,EAAC,cAAc;gBACxB,IAAI,EAAC,MAAM;gBACX,QAAQ;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAE,EACTA,kBAAkB,CAAC,MAAM,CAAC;YAAA;cAAA;cAAA;cAAA;YAAA;UACvB;YAAA;YAAA;YAAA;UAAA,QACJ,eACN;YAAQ,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,mBAAmB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB,eACnE;YAAG,IAAI,EAAC,WAAW;YAAC,SAAS,EAAC,mBAAmB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAA2B;QAAA;UAAA;UAAA;UAAA;QAAA;MACvE;QAAA;QAAA;QAAA;MAAA,QACH;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EACR;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}