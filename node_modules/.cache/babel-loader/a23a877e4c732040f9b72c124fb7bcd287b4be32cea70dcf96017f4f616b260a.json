{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/test.js\";\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport bcrypt from \"bcryptjs-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Test extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      passwrd: ''\n    };\n    this.errors = {\n      email: \"Invalid email\",\n      pass: \"Invalid password\"\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleLoginForum = async event => {\n      event.preventDefault();\n      const payload = {\n        email: this.state.username,\n        password: this.state.passwrd\n      };\n      axios({\n        url: 'http://localhost:8080/api/login',\n        method: 'POST',\n        data: payload\n      })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data successfully sent to server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Daniels Test Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */","map":{"version":3,"names":["React","useState","useNavigate","axios","bcrypt","Test","Component","state","email","passwrd","errors","pass","handleEventUpdate","event","target","name","value","setState","handleLoginForum","preventDefault","payload","username","password","url","method","data","then","console","log","catch","render","Login"],"sources":["/home/daniel/CS499/src/pages/test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport bcrypt from \"bcryptjs-react\";\n\nclass Test extends React.Component{\n\n  state = {\n    email: '',\n    passwrd: '',\n  };\n  //[errorMessages, setErrorMessages] = useState({});\n  //[isSubmitted, setIsSubmitted] = useState(false);\n  errors = {\n    email: \"Invalid email\",\n    pass: \"Invalid password\"\n  };\n\n  //gets the current target getting updated\n  //this is redundant, but I do not have the time to clean this up atm.\n  handleEventUpdate = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    })\n  };\n\n\n  handleLoginForum = async (event) =>{\n    event.preventDefault();\n\n    const payload = {\n      email: this.state.username,\n      password: this.state.passwrd\n    };\n\n    axios({\n      url: 'http://localhost:8080/api/login',\n      method: 'POST',\n      data: payload\n    })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data successfully sent to server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      })\n  }\n\n  render(){\n    return(\n      <div className='text-center text-white'>\n        <h1>Daniels Test Page</h1>\n      </div>\n    );\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,MAAM,MAAM,gBAAgB;AAAC;AAEpC,MAAMC,IAAI,SAASL,KAAK,CAACM,SAAS;EAAA;IAAA;IAAA,KAEhCC,KAAK,GAAG;MACNC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACX,CAAC;IAAA,KAGDC,MAAM,GAAG;MACPF,KAAK,EAAE,eAAe;MACtBG,IAAI,EAAE;IACR,CAAC;IAAA,KAIDC,iBAAiB,GAAIC,KAAK,IAAK;MAC7B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;MAC3B,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxB,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;MAE1B,IAAI,CAACC,QAAQ,CAAC;QACZ,CAACF,IAAI,GAAGC;MACV,CAAC,CAAC;IACJ,CAAC;IAAA,KAGDE,gBAAgB,GAAG,MAAOL,KAAK,IAAI;MACjCA,KAAK,CAACM,cAAc,EAAE;MAEtB,MAAMC,OAAO,GAAG;QACdZ,KAAK,EAAE,IAAI,CAACD,KAAK,CAACc,QAAQ;QAC1BC,QAAQ,EAAE,IAAI,CAACf,KAAK,CAACE;MACvB,CAAC;MAEDN,KAAK,CAAC;QACJoB,GAAG,EAAE,iCAAiC;QACtCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC;MACC;MAAA,CACCM,IAAI,CAAC,MAAM;QACVC,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC7D,CAAC;MACD;MAAA,CACCC,KAAK,CAAC,MAAM;QACXF,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;MAClD,CAAC,CAAC;IACN,CAAC;EAAA;EAEDE,MAAM,GAAE;IACN,oBACE;MAAK,SAAS,EAAC,wBAAwB;MAAA,uBACrC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA0B;MAAA;MAAA;MAAA;IAAA,QACtB;EAEV;EACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,KAAK;;AAEpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}