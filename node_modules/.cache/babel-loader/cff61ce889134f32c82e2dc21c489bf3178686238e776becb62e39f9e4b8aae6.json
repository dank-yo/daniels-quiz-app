{"ast":null,"code":"var _jsxFileName = \"/home/daniel/daniels-quiz-app/src/pages/exam.js\";\n/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      error: null\n    };\n    this.componentDidMount = () => {\n      const search = window.location.search;\n      const params = new URLSearchParams(search);\n      const quizID = params.get('id');\n      this.getQuiz(quizID);\n    };\n    this.getQuiz = quizID => {\n      axios.get(`${API_BASE_URL}/quiz/exam?id=${quizID}`).then(response => {\n        const data = response.data;\n        console.log(data); // Check the received data in the console\n        this.setState({\n          posts: data\n        }, () => {\n          console.log(\"State updated:\", this.state.posts); // Check the updated state in the console\n        });\n\n        console.log(\"Data retrieved!\", data);\n      }).catch(error => {\n        console.log(\"Error!\", error);\n      });\n    };\n    this.displayQuiz = quizzes => {\n      console.log(\"Displaying quizzes:\", quizzes);\n      if (!Array.isArray(quizzes)) {\n        return null; // Return early if quizzes is not an array\n      }\n\n      return quizzes.map((quiz, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: quiz.title,\n            children: quiz.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: quiz.creator,\n            children: [\"By \", quiz.creator]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), quiz.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"#\", questionIndex + 1, \": \", question.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: `q${index + 1}`,\n                  value: `option${optionIndex + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this), option]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 23\n              }, this)\n            }, optionIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)]\n          }, questionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-light\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this));\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  // Renders quiz\n  render() {\n    const {\n      quiz,\n      error\n    } = this.state;\n    console.log(quiz);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white container\",\n        children: this.displayQuiz(quiz)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default Exam;","map":{"version":3,"names":["React","axios","API_BASE_URL","Exam","Component","state","posts","error","componentDidMount","search","window","location","params","URLSearchParams","quizID","get","getQuiz","then","response","data","console","log","setState","catch","displayQuiz","quizzes","Array","isArray","map","quiz","index","title","creator","questions","question","questionIndex","options","option","optionIndex","handleEventUpdate","event","target","name","value","render","message"],"sources":["/home/daniel/daniels-quiz-app/src/pages/exam.js"],"sourcesContent":["/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\n\nimport { API_BASE_URL } from '../config';\n\nclass Exam extends React.Component{\n    state = {\n        posts:[],\n        error: null\n    }\n\n    // Calls whenever the React Component mounts.\n    componentDidMount = () => {\n      const search = window.location.search;\n      const params = new URLSearchParams(search);\n      const quizID = params.get('id');\n      this.getQuiz(quizID);\n    }\n\n    // Get a quiz\n    getQuiz = (quizID) => {\n      axios.get(`${API_BASE_URL}/quiz/exam?id=${quizID}`)\n        .then((response) => {\n          const data = response.data;\n          console.log(data); // Check the received data in the console\n          this.setState({ posts: data }, () => {\n            console.log(\"State updated:\", this.state.posts); // Check the updated state in the console\n          });\n          console.log(\"Data retrieved!\", data);\n        })\n        .catch((error) => {\n          console.log(\"Error!\", error);\n        });\n    }\n\n    // Returns a map of posts.\n    displayQuiz = (quizzes) => {\n        console.log(\"Displaying quizzes:\", quizzes);\n        if (!Array.isArray(quizzes)) {\n          return null; // Return early if quizzes is not an array\n        }\n        \n        return quizzes.map((quiz, index) => (\n          <div id={index} key={index}>\n            <form>\n              <h1 id={quiz.title}>{quiz.title}</h1>\n              <p id={quiz.creator}>By {quiz.creator}</p>\n              {quiz.questions.map((question, questionIndex) => (\n                <div key={questionIndex}>\n                  <p>#{questionIndex + 1}: {question.question}</p>\n                  {question.options.map((option, optionIndex) => (\n                    <div className=\"radio\" key={optionIndex}>\n                      <label>\n                        <input type=\"radio\" name={`q${index + 1}`} value={`option${optionIndex + 1}`} />\n                        {option}\n                      </label>\n                    </div>\n                  ))}\n                  <br></br>\n                </div>\n              ))}\n              <button type=\"button\" className=\"btn btn-outline-light\">Submit</button>\n            </form>\n          </div>\n        ));\n      }\n    \n    // Updates the state of the target.\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name; \n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n      };\n\n\n    // Renders quiz\n    render() {\n      const { quiz, error } = this.state;\n      console.log(quiz);\n        return (\n          <div>\n            {error && <p>Error: {error.message}</p>}\n            <div className='text-center text-white container'>\n                \n              {this.displayQuiz(quiz)}\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Exam;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}