{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/login.js\";\n// eslint-disable-next-line\nimport React, { useState } from 'react';\n// eslint-disable-next-line\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      email: '',\n      passwrd: ''\n    };\n    this.errors = {\n      eml: \"Invalid email\",\n      pass: \"Invalid password\"\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleLoginForum = async event => {\n      event.preventDefault();\n      const payload = {\n        email: this.state.username,\n        password: this.state.passwrd\n      };\n      axios({\n        url: 'http://localhost:8080/api/login',\n        method: 'POST',\n        data: payload\n      })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data successfully sent to server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleLoginForum,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"placeholder@example.com\",\n                className: \"form-control\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                //Daniel\n                //changed from text -> password\n                type: \"password\",\n                className: \"form-control\",\n                name: \"passwrd\",\n                value: this.state.passwrd,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/register\",\n            className: \"btn btn-secondary\",\n            children: \"Dont have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */","map":{"version":3,"names":["React","useState","useNavigate","axios","Login","Component","state","email","passwrd","errors","eml","pass","handleEventUpdate","event","target","name","value","setState","handleLoginForum","preventDefault","payload","username","password","url","method","data","then","console","log","catch","render"],"sources":["/home/daniel/CS499/src/pages/login.js"],"sourcesContent":["// eslint-disable-next-line\nimport React, { useState } from 'react';\n// eslint-disable-next-line\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nclass Login extends React.Component{\n\n  state = {\n    email: '',\n    passwrd: '',\n  };\n  //[errorMessages, setErrorMessages] = useState({});\n  //[isSubmitted, setIsSubmitted] = useState(false);\n  errors = {\n    eml: \"Invalid email\",\n    pass: \"Invalid password\"\n  };\n\n  //gets the current target getting updated\n  //this is redundant, but I do not have the time to clean this up atm.\n  handleEventUpdate = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    })\n  };\n\n\n  handleLoginForum = async (event) =>{\n    event.preventDefault();\n\n    const payload = {\n      email: this.state.username,\n      password: this.state.passwrd\n    };\n\n    axios({\n      url: 'http://localhost:8080/api/login',\n      method: 'POST',\n      data: payload\n    })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data successfully sent to server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      })\n  }\n\n  render(){\n    return(\n      <div className='text-center text-white'>\n        <h1>Login</h1>\n        <div className=\"container mt-3\">\n          <form onSubmit={this.handleLoginForum} autoComplete=\"off\">\n            <div className=\"mb-3 mt-3\">\n            <label>Email:\n              <input \n                type=\"email\"\n                placeholder='placeholder@example.com'\n                className=\"form-control\"\n                name='email'\n                value={this.state.email}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n            </div>\n            <div className=\"mb-3\">\n              <label>Password:\n                <input \n                //Daniel\n                //changed from text -> password\n                  type=\"password\" \n                  className=\"form-control\"\n                  name=\"passwrd\"\n                  value={this.state.passwrd}\n                  onChange={this.handleEventUpdate}\n                  required/>\n              </label>\n            </div>\n            <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\n            <a href='/register' className='btn btn-secondary' >Dont have an account?</a>\n          </form>\n        </div>\n      </div>\n    );\n  }\n  /*\n  return (\n    <div className='text-center text-white'>\n      <div className='form'>\n        \n        {isSubmitted ? <div>User is successfully logged in</div> : pageForm}\n      </div>\n    </div>\n  );*/\n}\n\n\nexport default Login;\n\n/**\n *   const handleSubmit = (event) =>{ // use this to handle the submission from the form\n    event.preventDefault() //don't touch this\n    var { uname, pass } = document.forms[0];\n    console.log(uname, pass) // need to delete this in the final review\n    //find user --> this will change with database connection\n    const userData = database.find((user) => user.username === uname.value);\n\n    if (userData) { //shouldn't need to change this\n      if (userData.password !== pass.value){\n        setErrorMessages({name: \"pass\", message: \"Not a valid Password\"})\n      }else {\n        setIsSubmitted(true);\n        if(setIsSubmitted){ // set roll page\n          if(userData.roll === \"admin\"){\n            setTimeout(() => {\n              window.open('teacher', \"_self\")\n            }, 3000);\n          } else if(userData.roll === \"user\"){\n            setTimeout(() => {\n              window.open('student', \"_self\")\n            }, 3000);\n          } else {\n            setTimeout(() => {\n              window.open('/', \"_self\")\n            }, 3000);\n          }\n        }\n      }\n    } else{\n      setErrorMessages({name: \"uname\", message: \"Not a valid Username\"})\n    }\n  }\nconst renderErrorMessage = (name) =>\n  name === errorMessages.name && (\n    <div className='error'>{errorMessages.message}</div>\n  );\n */"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}