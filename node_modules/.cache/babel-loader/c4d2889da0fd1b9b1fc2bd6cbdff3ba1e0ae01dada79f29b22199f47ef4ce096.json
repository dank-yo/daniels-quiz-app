{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/register.js\";\nimport React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport bcrypt from \"bcryptjs-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Register extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: '',\n      firstname: '',\n      lastname: '',\n      passwrd: '',\n      posts: []\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleRegsitrationForm = async event => {\n      event.preventDefault();\n      var salt = await bcrypt.genSaltSync(10);\n      var hash = await bcrypt.hash(this.state.passwrd, salt);\n      const payload = {\n        username: this.state.username,\n        password: {\n          hash: hash,\n          salt: salt\n        },\n        name: {\n          firstname: this.state.firstname,\n          lastname: this.state.lastname\n        },\n        email: this.state.email,\n        role: \"user\",\n        lastlogin: new Date()\n      };\n      axios({\n        url: 'http://localhost:8080/api/register',\n        method: 'POST',\n        data: payload\n      })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data has been sent to the server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      });\n    };\n  }\n  render() {\n    console.log(\"State: \", this.state);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleRegsitrationForm,\n          autoComplete: \"off\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"username\",\n                value: this.state.username,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3 mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Firstname:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"m-2 form-control\",\n                name: \"firstname\",\n                placeholder: \"John\",\n                value: this.state.firstname,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Lastname:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"m-2 form-control\",\n                name: \"lastname\",\n                placeholder: \"Doe\",\n                value: this.state.lastname,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"eMail:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"placeholder@example.com\",\n                className: \"form-control\",\n                name: \"email\",\n                value: this.state.email,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"passwrd\",\n                value: this.state.passwrd,\n                onChange: this.handleEventUpdate,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/login\",\n            className: \"btn btn-secondary\",\n            children: \"Already a user?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Register;","map":{"version":3,"names":["React","useNavigate","axios","bcrypt","Register","Component","state","username","firstname","lastname","passwrd","posts","handleEventUpdate","event","target","name","value","setState","handleRegsitrationForm","preventDefault","salt","genSaltSync","hash","payload","password","email","role","lastlogin","Date","url","method","data","then","console","log","catch","render"],"sources":["/home/daniel/CS499/src/pages/register.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\n\nimport bcrypt from \"bcryptjs-react\";\n\n\nclass Register extends React.Component{\n\n  state = {\n    username: '',\n    firstname: '',\n    lastname: '', \n    passwrd: '',\n    posts: []\n  };\n\n  //gets the current target getting updated\n  //this is redundant, but I do not have the time to clean this up atm.\n  handleEventUpdate = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.value;\n\n    this.setState({\n      [name]: value\n    })\n  };\n\n\n  handleRegsitrationForm = async (event) =>{\n    event.preventDefault();\n\n    var salt = await bcrypt.genSaltSync(10);\n    var hash = await bcrypt.hash(this.state.passwrd, salt);\n\n    const payload = {\n      username: this.state.username,\n      password:{\n        hash: hash,\n        salt: salt\n      },\n      name:{\n        firstname: this.state.firstname,\n        lastname: this.state.lastname,\n      },\n      email: this.state.email,\n      role: \"user\",\n      lastlogin: new Date()\n    };\n\n    axios({\n      url: 'http://localhost:8080/api/register',\n      method: 'POST',\n      data: payload\n    })\n      //User redirect needs to go in this statement.\n      .then(() => {\n        console.log('[Console]: Data has been sent to the server!');\n      })\n      //Error handling should be sent to a notification box on the DOM\n      .catch(() => {\n        console.log('[Console]: Internal Server Error!');\n      })\n  }\n\n  \n\n  render(){\n    console.log(\"State: \", this.state);\n\n    return (\n      <div className='text-center text-white'>\n        <h1>Registration</h1>\n        <div className=\"container mt-3\">\n          <form onSubmit={this.handleRegsitrationForm} autoComplete=\"off\">\n            <div className=\"mb-3 mt-3\">\n              <label>Username:\n              <input \n                type=\"text\" \n                className=\"form-control\"\n                name='username'\n                value={this.state.username}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n            </div>\n            <div className=\"mb-3 mt-3\">\n              <label>Firstname:\n              <input \n                type=\"text\" \n                className=\"m-2 form-control\"\n                name='firstname'\n                placeholder='John'\n                value={this.state.firstname}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n              <label>Lastname:\n              <input \n                type=\"text\" \n                className=\"m-2 form-control\"\n                name='lastname'\n                placeholder='Doe'\n                value={this.state.lastname}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n            </div>\n            <div className=\"mb-3\">\n              <label>eMail:\n              <input \n                type=\"email\" \n                placeholder='placeholder@example.com'\n                className=\"form-control\"\n                name='email'\n                value={this.state.email}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n            </div>\n            <div className=\"mb-3\">\n              <label>Password:\n              <input \n                type=\"password\" \n                className=\"form-control\"\n                name='passwrd'\n                value={this.state.passwrd}\n                onChange={this.handleEventUpdate}\n                required/>\n              </label>\n            </div>\n          <a href='/login' className='btn btn-secondary' >Already a user?</a>\n          <button type=\"submit\" className=\"btn btn-secondary\">Submit</button>\n        </form>\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}