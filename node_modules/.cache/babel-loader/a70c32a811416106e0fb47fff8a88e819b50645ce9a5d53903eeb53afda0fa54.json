{"ast":null,"code":"var _jsxFileName = \"/home/daniel/CS499/src/pages/exam.js\";\n/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quizID: '',\n      posts: []\n    };\n    this.componentDidMount = () => {\n      this.state.quizID = localStorage.getItem('quizID');\n      this.getQuiz();\n    };\n    this.getQuiz = id => {\n      axios.get('http://localhost:8080/api/quiz/exam', {\n        params: {\n          quizID: id\n        }\n      }).then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log(\"Data retrieved!\", data);\n      }).catch(e => {\n        console.log(\"Error!\", e);\n      });\n    };\n    this.displayQuiz = posts => {\n      const map = posts.map((post, index) => Object.keys(post).forEach(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: index,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            id: post.title,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: post.creator,\n            children: [\"By \", post.creator]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question \", post.question[key]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)));\n      return map;\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  // Renders quiz\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white\",\n      children: this.displayQuiz(this.state.posts)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Exam;","map":{"version":3,"names":["React","axios","Exam","Component","state","quizID","posts","componentDidMount","localStorage","getItem","getQuiz","id","get","params","then","response","data","setState","console","log","catch","e","displayQuiz","map","post","index","Object","keys","forEach","key","title","creator","question","handleEventUpdate","event","target","name","value","render"],"sources":["/home/daniel/CS499/src/pages/exam.js"],"sourcesContent":["/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\n\nclass Exam extends React.Component{\n    state = {\n        quizID:'',\n        posts:[]\n    }\n\n    // Calls whenever the React Component mounts.\n    componentDidMount = () => {\n        this.state.quizID = localStorage.getItem('quizID')\n        this.getQuiz();\n      }\n\n\n    // Get a quiz\n    getQuiz = (id) => {\n        axios.get('http://localhost:8080/api/quiz/exam', {params:{quizID: id}})\n            .then((response) => {\n                const data = response.data;\n                this.setState({posts: data})\n                console.log(\"Data retrieved!\", data);\n            })\n            .catch((e) => {\n                console.log(\"Error!\", e)\n            })\n    }\n\n\n    // Returns a map of posts.\n    displayQuiz = (posts) => {\n        const map = posts.map((post, index) => (\n            Object.keys(post).forEach(key => (\n                <div id={index} key={index}>\n                <form>\n                    <h1 id={post.title}>{post.title}</h1>\n                    <p id={post.creator}>By {post.creator}</p>\n\n                    <p>Question {post.question[key]}</p>\n                    <button type='button' className='btn btn-secondary'>Submit</button>\n                </form>\n                </div>\n            ))    \n        ));\n\n        return map ;\n    }\n    \n    // Updates the state of the target.\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name; \n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n      };\n\n\n    // Renders quiz\n    render(){\n        return(\n            <div className='text-center text-white'>\n                {this.displayQuiz(this.state.posts)}\n            </div>\n        );\n    }\n}\n\nexport default Exam;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,IAAI,SAASF,KAAK,CAACG,SAAS;EAAA;IAAA;IAAA,KAC9BC,KAAK,GAAG;MACJC,MAAM,EAAC,EAAE;MACTC,KAAK,EAAC;IACV,CAAC;IAAA,KAGDC,iBAAiB,GAAG,MAAM;MACtB,IAAI,CAACH,KAAK,CAACC,MAAM,GAAGG,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAClD,IAAI,CAACC,OAAO,EAAE;IAChB,CAAC;IAAA,KAIHA,OAAO,GAAIC,EAAE,IAAK;MACdV,KAAK,CAACW,GAAG,CAAC,qCAAqC,EAAE;QAACC,MAAM,EAAC;UAACR,MAAM,EAAEM;QAAE;MAAC,CAAC,CAAC,CAClEG,IAAI,CAAEC,QAAQ,IAAK;QAChB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;QAC1B,IAAI,CAACC,QAAQ,CAAC;UAACX,KAAK,EAAEU;QAAI,CAAC,CAAC;QAC5BE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEH,IAAI,CAAC;MACxC,CAAC,CAAC,CACDI,KAAK,CAAEC,CAAC,IAAK;QACVH,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,CAAC,CAAC;MAC5B,CAAC,CAAC;IACV,CAAC;IAAA,KAIDC,WAAW,GAAIhB,KAAK,IAAK;MACrB,MAAMiB,GAAG,GAAGjB,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAC9BC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,CAACI,OAAO,CAACC,GAAG,iBACzB;QAAK,EAAE,EAAEJ,KAAM;QAAA,uBACf;UAAA,wBACI;YAAI,EAAE,EAAED,IAAI,CAACM,KAAM;YAAA,UAAEN,IAAI,CAACM;UAAK;YAAA;YAAA;YAAA;UAAA,QAAM,eACrC;YAAG,EAAE,EAAEN,IAAI,CAACO,OAAQ;YAAA,kBAAKP,IAAI,CAACO,OAAO;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eAE1C;YAAA,wBAAaP,IAAI,CAACQ,QAAQ,CAACH,GAAG,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAAK,eACpC;YAAQ,IAAI,EAAC,QAAQ;YAAC,SAAS,EAAC,mBAAmB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAgB;QAAA;UAAA;UAAA;UAAA;QAAA;MAChE,GAPcJ,KAAK;QAAA;QAAA;QAAA;MAAA,QAS7B,CACJ,CAAC;MAEF,OAAOF,GAAG;IACd,CAAC;IAAA,KAGDU,iBAAiB,GAAIC,KAAK,IAAK;MAC3B,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;MAC3B,MAAMC,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxB,MAAMC,KAAK,GAAGF,MAAM,CAACE,KAAK;MAE1B,IAAI,CAACpB,QAAQ,CAAC;QACZ,CAACmB,IAAI,GAAGC;MACV,CAAC,CAAC;IACJ,CAAC;EAAA;EAGH;EACAC,MAAM,GAAE;IACJ,oBACI;MAAK,SAAS,EAAC,wBAAwB;MAAA,UAClC,IAAI,CAAChB,WAAW,CAAC,IAAI,CAAClB,KAAK,CAACE,KAAK;IAAC;MAAA;MAAA;MAAA;IAAA,QACjC;EAEd;AACJ;AAEA,eAAeJ,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}