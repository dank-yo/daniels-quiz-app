{"ast":null,"code":"var _jsxFileName = \"/home/daniel/daniels-quiz-app/src/pages/exam.js\";\n/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\nimport { API_BASE_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      posts: [],\n      error: null\n    };\n    this.componentDidMount = () => {\n      const search = window.location.search;\n      const params = new URLSearchParams(search);\n      const quizID = params.get('id');\n      this.getQuiz(quizID);\n    };\n    this.getQuiz = async quizID => {\n      axios.get(`${API_BASE_URL}/quiz/exam?id=${quizID}`).then(response => {\n        const data = response.data;\n        const dataArray = data ? [data] : [];\n        this.setState({\n          posts: dataArray\n        });\n      }).catch(error => {\n        console.log(\"Error!\", error);\n      });\n    };\n    this.displayQuiz = quizzes => {\n      if (!quiz) {\n        return null; // Return early if quiz is null\n      }\n\n      const {\n        title,\n        creator,\n        questions\n      } = quizzes;\n      const {\n        selectedOptions\n      } = this.state;\n      const handleOptionChange = (questionIndex, optionIndex) => {\n        this.setState(prevState => ({\n          selectedOptions: {\n            ...prevState.selectedOptions,\n            [questionIndex]: optionIndex\n          }\n        }));\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: title,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: creator,\n          children: [\"By \", creator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"#\", questionIndex + 1, \": \", question.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${questionIndex + 1}`,\n                value: `option${optionIndex + 1}`,\n                checked: selectedOptions[questionIndex] === optionIndex,\n                onChange: () => handleOptionChange(questionIndex, optionIndex)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this)\n          }, optionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)]\n        }, questionIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-light\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  // Renders quiz\n  render() {\n    const {\n      posts,\n      error\n    } = this.state;\n    console.log(posts);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-white container\",\n        children: this.displayQuiz(posts)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default Exam;","map":{"version":3,"names":["React","axios","API_BASE_URL","Exam","Component","state","posts","error","componentDidMount","search","window","location","params","URLSearchParams","quizID","get","getQuiz","then","response","data","dataArray","setState","catch","console","log","displayQuiz","quizzes","quiz","title","creator","questions","selectedOptions","handleOptionChange","questionIndex","optionIndex","prevState","map","question","options","option","handleEventUpdate","event","target","name","value","render","message"],"sources":["/home/daniel/daniels-quiz-app/src/pages/exam.js"],"sourcesContent":["/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\n\nimport { API_BASE_URL } from '../config';\n\nclass Exam extends React.Component{\n    state = {\n        posts:[],\n        error: null\n    }\n\n    // Calls whenever the React Component mounts.\n    componentDidMount = () => {\n      const search = window.location.search;\n      const params = new URLSearchParams(search);\n      const quizID = params.get('id');\n      this.getQuiz(quizID);\n    }\n\n    // Get a quiz\n    getQuiz = async (quizID) => {\n      axios.get(`${API_BASE_URL}/quiz/exam?id=${quizID}`)\n        .then((response) => {\n          const data = response.data;\n          const dataArray = data ? [data] : [];\n          this.setState({ posts: dataArray })\n        })\n        .catch((error) => {\n          console.log(\"Error!\", error);\n        });\n    }\n\n    // Returns a map of posts.\n    displayQuiz = (quizzes) => {\n\n      if (!quiz) {\n        return null; // Return early if quiz is null\n      }\n\n      \n      const { title, creator, questions } = quizzes;\n      const { selectedOptions } = this.state;\n\n      const handleOptionChange = (questionIndex, optionIndex) => {\n        this.setState(prevState => ({\n          selectedOptions: {\n            ...prevState.selectedOptions,\n            [questionIndex]: optionIndex\n          }\n        }));\n      };\n\n      return (\n        <div>\n          <h1 id={title}>{title}</h1>\n          <p id={creator}>By {creator}</p>\n          {questions.map((question, questionIndex) => (\n            <div key={questionIndex}>\n              <p>#{questionIndex + 1}: {question.question}</p>\n              {question.options.map((option, optionIndex) => (\n                <div className=\"radio\" key={optionIndex}>\n                  <label>\n                    <input\n                      type=\"radio\"\n                      name={`q${questionIndex + 1}`}\n                      value={`option${optionIndex + 1}`}\n                      checked={selectedOptions[questionIndex] === optionIndex}\n                      onChange={() => handleOptionChange(questionIndex, optionIndex)}\n                    />\n                    {option}\n                  </label>\n                </div>\n              ))}\n              <br />\n            </div>\n          ))}\n          <button type=\"button\" className=\"btn btn-outline-light\">\n            Submit\n          </button>\n        </div>\n      );\n      }\n    \n    // Updates the state of the target.\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name; \n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n      };\n\n\n    // Renders quiz\n    render() {\n      const { posts, error } = this.state;\n      console.log(posts);\n        return (\n          <div>\n            {error && <p>Error: {error.message}</p>}\n            <div className='text-center text-white container'>\n                \n              {this.displayQuiz(posts)}\n            </div>\n          </div>\n        );\n      }\n}\n\nexport default Exam;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}