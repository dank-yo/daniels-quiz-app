{"ast":null,"code":"var _jsxFileName = \"/home/daniel/daniels-quiz-app/src/pages/exam.js\";\n/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Exam extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      quizID: '',\n      posts: []\n    };\n    this.componentDidMount = () => {\n      this.state.quizID = localStorage.getItem('quizID');\n      this.getQuiz();\n    };\n    this.getQuiz = id => {\n      axios.get('http://localhost:8080/api/quiz/exam', {\n        params: {\n          quizID: id\n        }\n      }).then(response => {\n        const data = response.data;\n        this.setState({\n          posts: data\n        });\n        console.log(\"Data retrieved!\", data);\n      }).catch(e => {\n        console.log(\"Error!\", e);\n      });\n    };\n    this.displayQuiz = posts => {\n      if (!quiz) {\n        return null;\n      }\n      const {\n        title,\n        creator,\n        questions\n      } = quiz;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"By \", creator]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this), questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question #\", index + 1, \": \", question.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), Object.values(question.options).map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"radio\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: `q${index}`,\n                value: `option${optionIndex + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this), option]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this)\n          }, optionIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-light\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    };\n    this.handleEventUpdate = event => {\n      const target = event.target;\n      const name = target.name;\n      const value = target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n  // Renders quiz\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-white container\",\n      children: this.displayQuiz(this.state.posts)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Exam;","map":{"version":3,"names":["React","axios","Exam","Component","state","quizID","posts","componentDidMount","localStorage","getItem","getQuiz","id","get","params","then","response","data","setState","console","log","catch","e","displayQuiz","quiz","title","creator","questions","map","question","index","Object","values","options","option","optionIndex","handleEventUpdate","event","target","name","value","render"],"sources":["/home/daniel/daniels-quiz-app/src/pages/exam.js"],"sourcesContent":["/* exam.js\n * This page is responsible for the actual exam portion.\n * Should grab a quiz from the database then give the user to solve questions\n * \n * Daniel\n */\n\nimport React from 'react';\nimport axios from 'axios';\n\nclass Exam extends React.Component{\n    state = {\n        quizID:'',\n        posts:[]\n    }\n\n    // Calls whenever the React Component mounts.\n    componentDidMount = () => {\n        this.state.quizID = localStorage.getItem('quizID')\n        this.getQuiz();\n      }\n\n\n    // Get a quiz\n    getQuiz = (id) => {\n        axios.get('http://localhost:8080/api/quiz/exam', {params:{quizID: id}})\n            .then((response) => {\n                const data = response.data;\n                this.setState({posts: data})\n                console.log(\"Data retrieved!\", data);\n            })\n            .catch((e) => {\n                console.log(\"Error!\", e)\n            })\n    }\n\n\n    // Returns a map of posts.\n    displayQuiz = (posts) => {\n        if (!quiz) {\n            return null;\n          }\n      \n          const { title, creator, questions } = quiz;\n      \n          return (\n            <div>\n              <h1>{title}</h1>\n              <p>By {creator}</p>\n              {questions.map((question, index) => (\n                <div key={index}>\n                  <p>Question #{index + 1}: {question.question}</p>\n                  {Object.values(question.options).map((option, optionIndex) => (\n                    <div className=\"radio\" key={optionIndex}>\n                      <label>\n                        <input type=\"radio\" name={`q${index}`} value={`option${optionIndex + 1}`} />\n                        {option}\n                      </label>\n                    </div>\n                  ))}\n                  <br></br>\n                </div>\n              ))}\n              <button type=\"button\" className=\"btn btn-outline-light\">Submit</button>\n            </div>\n          );\n    }\n    \n    // Updates the state of the target.\n    handleEventUpdate = (event) => {\n        const target = event.target;\n        const name = target.name; \n        const value = target.value;\n    \n        this.setState({\n          [name]: value\n        })\n      };\n\n\n    // Renders quiz\n    render(){\n        return(\n            <div className='text-center text-white container'>\n                {this.displayQuiz(this.state.posts)}\n            </div>\n        );\n    }\n}\n\nexport default Exam;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}